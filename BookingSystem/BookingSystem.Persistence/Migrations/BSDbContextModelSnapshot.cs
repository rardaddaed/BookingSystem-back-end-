// <auto-generated />
using System;
using BookingSystem.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookingSystem.Persistence.Migrations
{
    [DbContext(typeof(BSDbContext))]
    partial class BSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookingSystem.Domain.Entities.BookingLevel", b =>
                {
                    b.Property<Guid>("BookingLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Alias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("BlueprintHeight")
                        .HasColumnType("int");

                    b.Property<string>("BlueprintUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("BlueprintWidth")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Locked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("MaxBooking")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(8);

                    b.Property<DateTime?>("ModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("BookingLevelId");

                    b.ToTable("BookingLevel");
                });

            modelBuilder.Entity("BookingSystem.Domain.Entities.BookingObject", b =>
                {
                    b.Property<Guid>("BookingObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookingLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BookingObjectTypeId")
                        .HasColumnType("int");

                    b.Property<Guid?>("BookingTeamAreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Coords")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Locked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BookingObjectId");

                    b.HasIndex("BookingLevelId");

                    b.HasIndex("BookingTeamAreaId");

                    b.ToTable("BookingObject");
                });

            modelBuilder.Entity("BookingSystem.Domain.Entities.BookingObjectType", b =>
                {
                    b.Property<int>("BookingObjectTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BookingObjectTypeId");

                    b.ToTable("BookingObjectType");
                });

            modelBuilder.Entity("BookingSystem.Domain.Entities.BookingTeamArea", b =>
                {
                    b.Property<Guid>("BookingTeamAreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookingLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Coords")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Locked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("BookingTeamAreaId");

                    b.HasIndex("BookingLevelId");

                    b.ToTable("BookingTeamArea");
                });

            modelBuilder.Entity("BookingSystem.Domain.Entities.BookingObject", b =>
                {
                    b.HasOne("BookingSystem.Domain.Entities.BookingLevel", "BookingLevel")
                        .WithMany("BookingObjects")
                        .HasForeignKey("BookingLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingSystem.Domain.Entities.BookingTeamArea", "BookingTeamArea")
                        .WithMany("BookingObjects")
                        .HasForeignKey("BookingTeamAreaId");

                    b.Navigation("BookingLevel");

                    b.Navigation("BookingTeamArea");
                });

            modelBuilder.Entity("BookingSystem.Domain.Entities.BookingTeamArea", b =>
                {
                    b.HasOne("BookingSystem.Domain.Entities.BookingLevel", "BookingLevel")
                        .WithMany("BookingTeamAreas")
                        .HasForeignKey("BookingLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookingLevel");
                });

            modelBuilder.Entity("BookingSystem.Domain.Entities.BookingLevel", b =>
                {
                    b.Navigation("BookingObjects");

                    b.Navigation("BookingTeamAreas");
                });

            modelBuilder.Entity("BookingSystem.Domain.Entities.BookingTeamArea", b =>
                {
                    b.Navigation("BookingObjects");
                });
#pragma warning restore 612, 618
        }
    }
}
